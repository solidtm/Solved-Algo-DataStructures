package com.solid.algolearning.javacode.data_structures.tries;

import java.util.Arrays;

//Problem Statement#
//        In this problem, you have to implement the isFormationPossible() function to find whether,
//        the given word can be formed by combining two words from the dictionary.
//
//        Function Prototype:#
//        boolean isFormationPossible(String[] dict, String word);
//        Here, dict is the dictionary containing unique strings, and word is a string.
//
//        Output:#
//        It returns true if the given word can be generated by combining two words from the given dictionary; otherwise, it returns false.
//
//        Sample Input#
//        String dict[] = {"the" ,"hello", "there", "answer", "any", "Dragon", "world", "their", "inc"};
//        String word = "helloworld"
//
//        Sample Output#
//        true


public class WordMatching {
    public static boolean isFormationPossible(String[] dict,String word) {
        if(word.length() < 2 || dict.length < 2) {
            return false;
        }

        //Create Trie and insert dictionary elements in it
        Trie trie = new Trie();

        for (String s : dict) {
            trie.insert(s);
        }

        for(int i = 0; i < word.length(); i++) {
            //Slice the word into two strings in each iteration
            String first = word.substring(0, i);
            String second = word.substring(i, word.length());

            //If both substrings are present in the trie, the condition is fulfilled
            if(trie.search(first) && trie.search(second)) {
                return true;
            }
        }

        return false;
    }

    public static void main(String args[]){
        // Input dict (use only 'a' through 'z' and lower case)
        String dict[] = {"the", "hello", "there", "answer","any", "dragon", "world", "their",  "inc"};

        System.out.println("Keys: "+ Arrays.toString(dict));

        if(isFormationPossible(dict, "helloworld"))
            System.out.println("true");
        else
            System.out.println("false");

    }
}
